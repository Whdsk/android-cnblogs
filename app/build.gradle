apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        applicationId "com.rae.cnblogs"
        versionCode 12
        versionName "2.0.0"
        multiDexEnabled true
        ndk {
            // 兼容webView问题
            abiFilters "armeabi"
            abiFilters "x86"
            abiFilters "armeabi-v7a"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries = false
    }
    signingConfigs {
        release {
            keyAlias 'com.rae.cnblogs'
            storeFile file(rootProject.ext.account.storeFile)
            keyPassword rootProject.ext.account.keyPassword
            storePassword rootProject.ext.account.storePassword
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix '.debug'
//            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
}

// 美团插件 - 渠道包
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = 'app-cnblogs-${channel}-${buildType}-d${versionCode}-v${versionName}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    annotationProcessor rootProject.ext.annotationProcessors.butterknife
    annotationProcessor rootProject.ext.annotationProcessors.arouter
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.butterknife
    implementation(rootProject.ext.dependencies.raeSwift, {
        exclude group: 'com.android.support'
    })
    implementation project(':module-resource')
    implementation project(':module-basic')
    implementation project(':module-widget')
    implementation project(':module-sdk')
    implementation project(':module-middleware')
    // 模块化
    if (!IsModule.toBoolean()) {
        implementation project(':module-user')
        implementation project(':module-home')
        implementation project(':module-moment')
        implementation project(':module-blog')
        implementation project(':module-discover')
    }
}
