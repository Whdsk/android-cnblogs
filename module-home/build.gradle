if (IsModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'com.jakewharton.butterknife'
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        applicationId "com.rae.cnblogs.home"
        versionCode rootProject.ext.android.versionCode
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    annotationProcessor rootProject.ext.annotationProcessors.butterknife
    annotationProcessor rootProject.ext.annotationProcessors.arouter

    implementation project(':module-resource')
    implementation project(':module-basic')
    implementation project(':module-widget')
    implementation project(':module-sdk')
    implementation project(':module-middleware')
    implementation project(':module-user')
//    if (!IsModule.toBoolean()) {
//        implementation project(':module-moment')
//    }

    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.butterknife
    implementation rootProject.ext.dependencies.switchbutton
    implementation rootProject.ext.dependencies.avoscloudSdk
    implementation rootProject.ext.dependencies.avoscloudFeedback
    implementation(rootProject.ext.dependencies.raeSwift, {
        exclude group: 'com.android.support'
    })

}
